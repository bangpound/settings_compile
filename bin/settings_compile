#!/usr/bin/env php
<?php

function includeIfExists($file)
{
  if (file_exists($file)) {
    return include $file;
  }
}

if ((!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php')) && (!$loader = includeIfExists(__DIR__.'/../../../autoload.php'))) {
  $msg =  'You must set up the project dependencies, run the following commands:'.PHP_EOL.
    'curl -sS https://getcomposer.org/installer | php'.PHP_EOL.
    'php composer.phar install'.PHP_EOL;
  fwrite(STDERR, $msg);
  exit(1);
}

use Drupal\Settings\SettingsServiceProvider;
use Pimple\Container;

$usage = "usage: settings_compile path/to/drupal/confd path/to/compiled/settings";
$args = array_slice($argv, 1);
if (count($args) !== 2) {
  echo $usage . "\n";
  exit(1);
}

foreach ($args as $key => $arg) {
  if ('/' !== $arg[0]) {
    $args[$key] = getcwd()."/$arg";
  }
}
list($config, $settings) = $args;

$pimple = new Container();
$pimple->register(new SettingsServiceProvider(), array(
  'drupal_settings.paths' => array(
    dirname($config)
  ),
));

$pimple['drupal_settings.loader']->load($config);

$pimple['drupal_settings.processor']->processConfiguration($pimple['drupal_settings.schema'], $pimple['drupal_settings.config']);

$code = $pimple['drupal_settings.dumper']->dump($pimple['drupal_settings.config']['drupal']);

file_put_contents($settings, $code);
